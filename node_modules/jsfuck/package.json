{
  "name": "jsfuck",
  "version": "0.4.0",
  "description": "Write any JavaScript with just 6 characters: []()!+",
  "main": "jsfuck.js",
  "bin": {
    "jsfuck": "fuck.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/aemkei/jsfuck.git"
  },
  "keywords": [
    "esoteric",
    "obfuscation"
  ],
  "author": {
    "name": "Martin Kleppe",
    "url": "https://github.com/aemkei"
  },
  "licenses": [
    {
      "type": "WTFPL",
      "url": "https://raw.github.com/aemkei/jsfuck/master/LICENSE.txt"
    }
  ],
  "bugs": {
    "url": "https://github.com/aemkei/jsfuck/issues"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt-contrib-watch": "~0.5.3",
    "grunt-contrib-jshint": "~0.6.4"
  },
  "gitHead": "4a19c5b30b217ae11f0cf4a828ecc388134bccb4",
  "readme": "# JSFuck `[]()!+`\n\nJSFuck is an esoteric and educational programming style based on the atomic parts of JavaScript. It uses only six different characters to write and execute code.\n\nIt does not depend on a browser, so you can even run it on Node.js.\n\nDemo: [jsfuck.com](http://www.jsfuck.com)\n\n### Example\n\nThe following source will do an `alert(1)`:\n\n```js\n[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[\n]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]\n])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+\n(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+\n!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![\n]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]\n+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[\n+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!!\n[]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![\n]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[\n]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((![]+[])[+!+[]]+(![\n]+[])[!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]+(!![]+[])[+[]]+(!\n[]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])\n[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]+[+!+[]]+(\n!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[\n])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]])()\n``` \n\n### Basics\n              \n    false       =>  ![]\n    true        =>  !![]\n    undefined   =>  [][[]]\n    NaN         =>  +[![]]\n    0           =>  +[]\n    1           =>  +!+[]\n    2           =>  !+[]+!+[]\n    10          =>  [+!+[]]+[+[]]\n    Array       =>  []\n    Number      =>  +[]\n    String      =>  []+[]\n    Boolean     =>  ![]\n    Function    =>  [][\"filter\"]\n    run         =>  [][\"filter\"][\"constructor\"]( CODE )()\n    eval        =>  [][\"filter\"][\"constructor\"](\"return eval\")()( CODE )\n    window      =>  [][\"filter\"][\"constructor\"](\"return this\")()\n    \nSee the full list [here](https://github.com/aemkei/jsfuck/blob/master/jsfuck.js).\n\n### Links\n\n* Follow [@aemkei](http://twitter.com/aemkei) (Martin Kleppe) <br>\n* Original discussion at [Sla.ckers.org](http://sla.ckers.org/forum/read.php?24,32930)\n\n\n[![Analytics](https://ga-beacon.appspot.com/UA-57649-14/aemkei/jsfuck)](https://github.com/igrigorik/ga-beacon)\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/aemkei/jsfuck",
  "_id": "jsfuck@0.4.0",
  "_shasum": "60496891d81b5550da71bc30b38a72fd5fbb82b1",
  "_from": "../../../../tmp/npm-3152-0304c416/1420733785862-0.5646994886919856/4a19c5b30b217ae11f0cf4a828ecc388134bccb4",
  "_resolved": "git://github.com/aemkei/jsfuck.git#4a19c5b30b217ae11f0cf4a828ecc388134bccb4"
}
